<html>

<head>
<title>BlogCFC</title>
<style>
body {
	font-family: Arial, Helvetica, sans-serif;
	margin: 20px;
}
.toc {
	border-style:solid;
	border-width: 2px;
	padding: 5px;
}
</style>

</head>

<body>

<img src="img/blogcfc_195.gif" alt="BlogCFC" title="BlogCFC">

<p>Welcome to BlogCFC, a ColdFusion based blogging application.
BlogCFC is in use by over five hundred unique sites and has numerous features.
If you run into problems with this blog, or have any ideas, please contact me.
(Contact and support information below.) For the latest releases and
information, please see <a href="http://blogcfc.riaforge.org/">http://blogcfc.riaforge.org</a>
and <a href="http://www.blogcfc.com">http://www.blogcfc.com</a>.
</p>

<div class="toc">
<a href="#license">Licence</a> | <a href="#contrib">Contributors</a> | <a href="#req">Requirements</a> |
<a href="#install">Installation</a> | <a href="#ini">The Blog INI File</a> | <a href="#working">Working with Your Blog</a> |
<a href="#editing">Blog Entry Editing Options</a> | <a href="#publishing">Publishing Non-Blog Content</a> | 
<a href="#security">Security</a> | 
<a href="#mobile">Mobile</a> | 
<a href="#misc">Miscellaneous</a>
</div>

<hr/>

<a name="license"></a>
<h2>License and Credits</h2>

<p>Copyright 2006-2010 Raymond Camden</p>

<p>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the
License. You may obtain a copy of the License at</p>

<p>http://www.apache.org/licenses/LICENSE-2.0</p>

<p>Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an &quot;AS IS&quot;
BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations
under the License.</p>

<p>I request the following if you use my blog:</p>

<ol>
<li>Please link back to my blog at <a href="http://www.coldfusionjedi.com">http://www.coldfusionjedi.com</a>.</li>
<li>If you find any bugs, or have any suggestions, please email me at <a
href="mailto:ray@camdenfamily.com">ray@camdenfamily.com</a>. 
You may also go to the BlogCFC Project page at <a href="http://blogcfc.riaforge.org">blogcfc.riaforge.org</a>.</li>
<li>If you <i>really</i> like the blog, you can always send me something from my
wishlist, located here: <a href="http://www.amazon.com/o/registry/2TCL1D08EZEYE">http://www.amazon.com/o/registry/2TCL1D08EZEYE</a></li>
</ol>

<hr/>

<a name="contrib"></a>
<h2>Contributors</h2>

<p>Many users have provided support, both in bug reports,
suggestions, and even code, for this project. I cannot thank them all, but please
note that I appreciate your work. BlogCFC would <b>not</b> be what it is today
without the support of its community of users. Below is a short list of major contributors.</p>

<ul>
<li><a href="http://www.boyzoid.com">Scott Stroz</a></li>
<li><a href="http://www.cfinsider.com">Jason Delmore</a></li>
<li><a href="http://www.jeffcoughlin.com/blog/index.cfm">Jeff Coughlin</a></li>
<li><a href="http://charlie.griefer.com/blog/index.cfm">Charlie Griefer</a></li>
<li><a href="http://www.sustainablegis.com/blog/cfg11n/">Paul Hastings</a></li>
<li><a href="http://blog.maestropublishing.com/">Peter J. Farrel</a></li>
<li>Deanna Schneider</li>
<li>Joe Nicora</li>
<li><a href="http://www.techfeed.net/blog/">Jacob Munson</a></li>
</ul>

<hr/>

<a name="req"></a>
<h2>Requirements</h2>

<p>BlogCFC requires ColdFusion 7 or compatible CFML engine and one of the following databases: MYSQL 4+, Oracle, MS Access, SQL Server.</p>

<hr/>

<a name="install"></a>
<h2>Installation</h2>

<p>
When you unzip the installation package, you will have three
main directories, client, org, and install. The client folder represents the
main blog application. If your web site will only contain the blog, then
obviously this folder will be your web root; you may rename this folder (be
sure to update this change in Administrator Settings). The org folder should be
placed under web root. This folder contains the CFCs used by the blog
application. The install folder contains miscellaneous files to help you
install the blog. This folder should be removed from your web root.</p>

<p><b>You now have 2 choices: </b>You can either run the new,
web based installer, or you can manually configure BlogCFC. If you wish to run
the web based installer, simply point your web browser to where you installed
BlogCFC. BlogCFC will notice it hasn't been set up and push you to the
installer. If you decided to follow the manual process, continue reading the
directions below. Note that manually setting up BlogCFC will require you to add
the &quot;marker&quot; that lets the application know it has been configured. Do not skip
this step. Repeat - do not skip this step.</p>

<p>Next, decide which database you want to use. In the install
folder you will find a mysql.sql file, a sqlserver.sql file, two Oracle files, and
a MS Access database. These are the four database types supported by BlogCFC.
Pick the one you plan on using it and set up a database manually, using your
favorite db admin program. Set up a datasource pointing to your database. Open
the blog.ini.cfm file from /org/camden/blog folder. Find the default section,
dsn key, and edit the value. Set the dsn value to what you set in the
ColdFusion Administrator. Set blogDBType to either MSSQL (for SQL Server),
MYSQL (for MySQL), ORACLE (for Oracle), or MSACCESS (for Access). Access users should not use the &quot;Access with Unicode&quot; driver type. They should use the &quot;Access&quot; driver type.</p>

<p>You also need to ensure blogdbtype matches your database.
This is described in the <a href="#ini"><b>Blog Ini File</b></a> section.</p>

<p><b>Note: The blog.ini.cfm file is described in more detail
later in this document. <span style='color:red'>READ THIS: The blog.ini.cfm
file is cached. This means if you visit the blog and make a change to the ini
file, it will NOT be reflected. To refresh the blog's cache, visit your blog
with ?reinit=1 at the end of the URL or use the Administrator. </span></b></p>

<p>You have two choices for placement of the org folder. If
there will only be one blog on the box, you can simply place the org folder inside
the client folder. If you will have multiple blogs, you should place the org folder
in any location you want, but then set up a mapping called &quot;org&quot; that
points to the folder you placed the org files. To repeat - no mapping is
necessary if you place the org folder under the client folder.</p>


<p>The last thing you should be when performing a manual set up
is to flag BlogCFC that it has been installed. The last key in the blog.ini.cfm
file, <code>installed</code>, should be set to true. If you do not do this, BlogCFC will
think it has to run it's own installer. I recommend deleting the installer
folder as well.</p>

<p>At this point, your blog should actually be working, but
obviously you will have no entries. In order to add entries, you should go to
the BlogCFC administrator. If your blog URL is: http://localhost/blog, then the
administrator would be http://localhost/blog/admin. You will be prompted to
logon. Use <b>admin</b> for the username and <b>admin</b> for the password. You
should change this password <b>immediately</b> or sometime soon. There is no
interface to do this so you will have to manually edit the password in the
database.</p>

<p>Unix users should make the /blog/images/captcha folder writeable by ColdFusion.</p>

<p>
Finally - note that the <a href="#mobile">mobile view</a> has it's own configuration.
</p>

<a name="ini"></a>
<h2>The Blog INI File</h2>

<p>In the previous section, I described editing the Blog INI
file (org/camden/blog/blog.ini.cfm) to set the DSN. There are other settings
you should edit as well. You do not have to edit this by hand. There is an
administrator tool for editing this file. Here is a typical set of entries:</p>


<p>
<pre>
dsn=blogdev
username=
password=
owneremail=ray@camdenfamily.com
blogURL=http://www.coldfusionjedi.com/index.cfm
blogTitle=BlogDev
blogDescription=The Dev Blog
blogDBType=MSSQL
locale=en_US
users=admin
commentsFrom=
mailserver=
mailusername=
mailpassword=
pingurls=
offset=-1
allowtrackbacks=1
trackbackspamlist=phentermine,casino
blogkeywords=
ipblocklist=
maxentries=10
usecaptcha=1
usecfp=1
allowgravatars=1
moderate=1
filebrowse=1
settings=1
imageroot=
itunesSubtitle=
itunesSummary=
itunesKeywords=
itunesAuthor=
itunesImage=
itunesExplicit=
usetweetbacks=
installed=0
</pre>
</p>

<p>The section name, [default], refers to the name of the blog.
If you have only one blog, leave this as default. If you have more than one
blog on a server, you will want to copy the [Default] section and give it a new
name, like [Other Blog]. You will then want to edit the Application.cfm file in
the client folder and modify these lines:</p>

<p>
<pre>
&lt;!---Edit this line if you are not using a default blog ---&gt;
&lt;cfset blogname = &quot;Default&quot;&gt;
</pre>
</p>

<hr/>

<h2>INI Settings and Descriptions</h2>

<table border="1" cellpadding="5">
<tr>
	<td><code>dsn</code></td>
	<td>
Specifies the datasource for your blog. BlogCFC supports multiple blogs in one DSN.
	</td>
</tr>
<tr>
	<td><code>username</code>,<code>password</code></td>
	<td>If your datasource requires a username and password, supply
it in the <code>username</code> and <code>password</code> keys.</td>
</tr>
<tr>
	<td><code>owneremail</code></td>
	<td>Should be your email address. This is used when comments are posted to your blog.</td>
</tr>
<tr>
	<td><code>blogURL</code></td>
	<td>Should point to the URL of your blog. BlogURL <b>MUST</b> include the index.cfm
file at the end. So if your blog is located at blog.org, do not simply use:
http://www.blog.org. Instead, use the full URL: http://www.blog.org/index.cfm.
	</td>
</tr>
<tr>
	<td><code>blogTitle</code>,<code>blogDescription</code></td>
	<td>Used in the RSS feed and in the main layout's top title bar.</td>
</tr>

<tr>
	<td><code>blogDBType</code></td>
	<td>Should either be MSSQL (for SQL Server), MYSQL (for MySQL), ORACLE (for Oracle), or MSACCESS (for Access).</td>
</tr>
<tr>
	<td><code>locale</code></td>
	<td>This is the locale setting for your blog. This is not a standard ColdFusion locale value,
but a standard Java locale.</td>
</tr>

<tr>
	<td><code>user</code></td>
	<td>A list of users that are the users allowed to use the blog. If you do not specify a list of users, any user
in the admin table can use the blog.</td>
</tr>

<tr>
	<td><code>commentsFrom</code></td>
	<td>
By default, comments are emailed out using a &quot;from&quot; address
of the person who sent the email. If you set a value for <code>commentsFrom</code>, the email will instead
be marked with that address. What that means is that when a user posts a
comment to a blog entry, each email sent to the unique users of the thread will
get an email from the address specified in that setting.</td>
</tr>

<tr>
	<td><code>mailserver</code>,<code>mailusername</code>,<code>mailpassword</code></td>
	<td>
<p>By default, the blog will send emails using the mail server
specified in the ColdFusion Administrator. If you want to override that
setting, use the <code>mailserver</code>, <code>mailusername</code>, and <code>mailpassword</code> settings. You do not need
to specify the username and password if your mail server doesn't require
authentication.</td>
</tr>

<tr>
	<td><code>pingurls</code></td>
	<td>The <code>pingurls</code>
setting lets you add ping support to your blog. This is described later in this
document in the <a href="#ping">Ping</a> section.</td>
</tr>

<tr>
	<td><code>offset</code></td>
	<td>
The <code>offset</code>
property allows you to offset the posted dates of your blog entries. So if your
blog server is in EST and you live in the CST timezone, you can use <code>offset=-1</code> to have the times of blog
entries reflect your timezone.</td>
</tr>

<tr>
	<td><code>allowtrackbacks</code</td>
	<td>
<p>The <code>allowtrackbacks</code>
property should be 1 or 0 (or true or false) for allowing trackback support on
your blog. Trackbacks are a way for people to link to your blog entries in a
way so that they show up in your entries as well. Unfortunately, trackbacks
tend to be spammed quite a bit. If you simply do not want to deal with
trackback spam, just disable the feature.</td>
</tr>
<tr>
	<td><code>trackbackspamlist</code></td>
	<td>
Talking about spam - there are two ways to fight trackback
spam in BlogCFC. You will get an email every time someone adds a new trackback.
In that email will be a link you can click to delete the trackback. The
&quot;nuclear&quot; option is the <code>trackbackspamlist</code>.
If any word from this list appears in the trackback, the trackback entry will <b>not</b>
be added to your blog. The person adding the trackback will <b>not</b> get a
warning, but will simply not see their trackback show up. <b>Note: The
trackbackspamlist also checks comments as well!</b></td>
</tr>

<tr>
	<td><code>blogkeywords</code></td>
	<td>
The <code>blogkeywords</code>
setting will be used in the meta tag of your blog. This should describe, in
general, the content you plan on blogging about. It should be a list of
keywords, separated by a comma. Spaces are ok. Here is an example: coldfusion,
star wars, lost</td>
</tr>

<tr>
	<td><code>ipblocklist</code></td>
	<td>The <code>ipblocklist</code>
setting is a set of IPs that are prevented from adding comments or trackbacks
to the blog. This could be used to block spammers or other people who may abuse
your blog. You are also allowed to use wildcards. 192.168.1.* would block
comments from anyone whose IP is in the range from 192.168.1.1 and higher.</td>
</tr>
<tr>
	<td><code>maxentries</code></td>
	<td>The <code>maxentries</code> setting controls how many entries are shown on your blog at one time.</td>
</tr>

<tr>
<td><code>usecaptcha</code></td>
<td>The <code>usecaptcha</code>
setting determines if CAPTCHA checking is turned on. If this setting is true, a
reader will be forced to enter text from a CAPTCHA image before adding comments
or sending blog entries.</td>
</tr>
<tr>
	<td><code>usecfp</code></td>
	<td>
Another method of spam protection is CFFormProtect. This is
a spam blocker that checks multiple things that can flag a spammer. To enable
this, set the <code>usecfp</code> value to 1.
You can further confige cfformprotect by modifying the configuration
information in the cfformprorect folder. Currently this is only used on the
comment form, not the 'Send Blog' form.</td>
</tr>
<tr>
	<td><code>allowgravatars</code></td>
	<td>
	Gravatars are a way to host images that represent a user's
	email address. If you turn on <code>allowgravatars</code>,
	BlogCFC will attempt to load a gravatar for each person's email address. If the
	person is not using Gravatar, a default image will be loaded instead.
	</td>
</tr>
<tr>
	<td><code>moderate</code></td>
	<td>The <code>moderate</code> setting determines if comment moderation is turned on. When moderation is on, comments will
	not show up on your blog until you approve them. You can approve them in one click via the email sent to you or via the Administrator.</td>
</tr>
<tr>
	<td><code>filebrowse</code></td>
	<td>
The <code>filebrowse</code>
setting determines if the file manager is available in the administrator. The
file manager lets you upload files to your blog. You may want to disable this
for clients who can't be trusted to not screw up their own file system. 
	</td>
</tr>

<tr>
	<td><code>settings</code></td>
	<td>
The <code>settings</code>
setting determines if the settings tool is available in the administrator. Like
the filebrowse setting, you may want to turn this off if you think it will be
too much for the client.</td>
</tr>

<tr>
	<td><code>imageroot</code></td>
	<td>
The <code>imageroot</code>
setting helps determine where images are stored. These are images uploaded in
the blog editor and slide show images. The default value is blank and results
in images being uploaded directly in the relevant folders. </td>
</tr>

<tr>
	<td><code>usetweetbacks</code></td>
	<td>
	The <code>usetweetbacks</code>
	option determines if TweetBacks should be enabled for blog posts. TweetBacks
	are twits (from twitter.com) about your blog post. BlogCFC will make use of
	SweetTweets to search Twitter for short URL versions of your blog entry. This
	results in a slight delay on the first hit to your blog post, but the results
	will be cached for a few minutes. </td>
</tr>

<tr>
	<td><code>installed</code></td>
	<td>
The <code>installed</code>
setting is a marker that flags BlogCFC as having been setup and installed. You
should set this to 1 if you are manually configuring BlogCFC.</td>
</tr>

</table>

<p>
The last batch of settings (the itunes group) all relate to
podcasting. Please see the section on podcasting for more information.
</p>

<hr/>

<a name="working"></a>
<h2>Working with Your Blog</h2>

<p>To begin working with your blog, you will want to enter the administrator (found at: yourblogurl/admin). In the left hand menu you will see
various options:</p>

<ul>
<li>Home: Returns you to the administrator home page.</li>
<li>Add Entry: Takes you straight to the form for adding a new entry.</li>
<li>Entries: Lets you browse, add, delete, and edit blog entries.</li>
<li>Categories: Lets you browse, add, delete, and edit blog
categories.</li>
<li>Comments: Lets you browse, add, delete, and edit blog comments.
This is a useful place to remove spam comments.</li>
<li>Moderate Comments: Used to moderate comments. </li>
<li>Pages: Lets you browse, add, delete, and edit blog pages.</li>
<li>Textblocks: Lets you browse, add, delete, and edit textblocks.</li>
<li>Refresh Blog Cache: Refreshes the blog cache.</li>
<li>Settings: Lets you modify the blog settings defined in the INI
file.</li>
<li>Subscribers: Lets you browse and remove subscribers.</li>
<li>Mail Subscribers: Lets you send an email to your blog
subscribers.</li>
<li>Trackbacks: Lets you browse, add, delete, and edit trackbacks. Remember - Trackbacks are evil. Don't use them.</li>
<li>Your Blog/Your Blog (New Window): Simply sends you to the public facing part of your web site.</li>
<li>Your Blog Stats: Takes you to your blog stats.</li>
<li>File Manager: Lets you upload and view files.</li>
<li>Slideshows: Lets you work with slide shows.</li>
<li>Update Password: I bet you can guess what this does.</li>
<li>Users: Let's you modify users.</li>
</ul>

<p>You will want to start by creating an initial blog category.
You must have at least one blog category before writing an entry. After you
have created a category, you may start writing blog entries.</p>

<hr/>

<a name="editing"></a>
<h2>Blog Entry Editing Options</h2>

<p>When working with blog entries, there are a few special tags
and features that you can use to enhance your entries:</p>


<p><code>&lt;more/&gt;</code>: Sometimes a blog entry may be very long. It
is preferable to show only a portion of the entry on the main blog and have the
detailed link contain the entire entry. By using the <code>&lt;more/&gt;</code> tag in your
blog entry, any text after the <code>&lt;more/&gt;</code> tag will only show up on the
individual entry display. You <b>must</b> include the closing / in the tag.
When blog entries are emailed, only the text before the <code>&lt;more/&gt;</code> tag is
included. </p>

<p><code>&lt;code&gt;</code>: The code tag allows you to wrap sets of code
that you want to show up in your entry. For example:</p>

<blockquote>
<p>
This is a sample entry. Blah blah blah. Here is some code
</p>

<p>
&lt;code&gt;<br/>
&lt;cfset x = 1&gt;<br/>
&lt;/code&gt;
</p>

<p>
This is more text.
</p>
</blockquote>

<p>Any code inside the <code>&lt;code&gt;</code> block will be escaped (&lt;
and &gt; tags changed to &amp;lt; and &amp;gt;), color coded, and will have
line breaks changed to &lt;br&gt; tags.</p>

<p><code>&lt;textblock label=&quot;&quot;&gt;</code>:  A textblock is simply a block of text with a label. You can
include textblocks dynamically in your blog entries by using the <code>&lt;textblock&gt;</code> tag:</p>

<blockquote>
<p>Here is my standard footer: &lt;textblock label=&quot;footer&quot;&gt;</p>
</blockquote>

<p>Entries can have &quot;enclosures&quot;, which are simply
attached files. This is a handy way to attach a resource to a blog entry. One
of the features of BlogCFC is that if you attach an image, the file will also
be included at the top of the blog entry. This is a handy and simple way to
display an image with a entry. </p>

<h4>Scheduled Releases</h4>

<p>BlogCFC supports delayed entries. This means you can write
an entry now that won't be displayed until later in the day. Subscribers will
not get an email on the entry until the entry is published. BlogCFC will
automatically add a scheduled event to handle the entry release.</p>

<h4>Draft Mode</h4>

<p>BlogCFC technically doesn't support a draft mode, but an
entry can be saved with the Released setting to false. This means that the entry
will not be shown on the blog. If you want to write an entry and save it
without publishing it, simply set the Released value to false.</p>

<h4>HTML/XML-RPC Editors</h4>

<p>BlogCFC uses a simple text area to handle entry editing. If
you want fancier editing, you have two options. One is to simply use an XML-RPC
capable blog editor. Your other option is to use an HTML edit control like
tinyMCE. I've made this easier by abstracting the textarea field out of the
blog editor. You can find this in the tags folder. The filename is
textarea.cfm. </p>

<hr/>

<a name="publishing"></a>
<h2>Publishing Non-Blog Content</h2>

<p>
BlogCFC has basic CMS (content management system) capabilities. While the basic blog application
works great for diary style entries, there was no way to create basic content
outside of the blog. BlogCFC provides additional publishing capabalities with by prodiving support for Pages, Textblocks, and Slide Shows.
</p>

<h4>Pages</h4>

<p>Pages are exactly what they sound like - complete pages of
content. So imagine you wanted to add a &quot;About Me&quot; page to your blog.
By using the pages feature, you could create a page that describes you. Once
you give it a title, BlogCFC will automatically creates a SES (search engine
safe URL) for the page and display it in the administrator. All pages live off
the page.cfm file. So your &quot;About Me&quot; page might have this url: http://www.yourblog.com/page.cfm/About-Me
</p>


<p>You can add any number of pages you want. To link to a blog
page, simply use the URL displayed in the administrator. Pages follow the same
editing rules that blog entries do. This means you can include code and
textblocks directly in the content. The only tag not supported is the
<code>&lt;more/&gt;</code> tag.</p>

<h4>Textblocks</h4>

<p>A textblock acts much like a page. However, these are used
for smaller pieces of content. For example, imagine you have a pod with your
favorite links. Normally to update this you would need to edit the file and FTP
it to the server. Textblocks lets you store the link pod data in the database.
To use textblocks, simply use the textBlock application control:</p>

<blockquote>
<p>
&lt;cfoutput&gt;<br>
#application.textblock.getTextblockContent(&quot;links&quot;)#<br>
&lt;/cfoutput&gt;</p>
</blockquote>

<p>
Textblocks are identified by their labels so ensure that you
do not duplicate two textblock labels. You can include the content of a
textblock inside a blog entry by using the <code>&lt;textblock&gt;</code> tag. Please see
the blog editing section for more information.
</p>

<h4>Working with Slide Shows</h4>


<p>
There are two ways to create slide shows. One way to create a slide show is to simply
upload a folder of images underneath your blog's images/slideshows folder. If
your folder was named &quot;foo&quot;, you have created a slide show named foo.
To view the slide show, simply go to: http://www.yourblog.com/slideshow.cfm/foo
</p>

<p>
BlogCFC will automatically discover all GIF and JPG files in
the folder and will create a slide show based on those images. You should do
your best to size your images beforehand as BlogCFC will not do any automatic
sizing.
</p>


<p>The second way to create slide shows is via the administrator. The administrator lets you add, edit, and delete slide shows. It
also lets you add titles to your shows as well as captions to your pictures. </p>

<h4>Podcasting</h4>


<p>Podcasting for BlogCFC was added by Brian Meloche. Podcasting is a large topic so we'll just cover how BlogCFC handles it. 
We will also assume you've got your MP3 files already prepared and ready to go.
</p>

<p>The first thing you need to do is add the MP3 to the blog
entry. You can do this either by uploading the MP3 when editing the blog entry,
or by using another program (like an FTP client) to upload the MP3 file. You
can then manually type in the name of the file in the blog entry.</p>

<p>As soon as you have used an MP3 file for a blog entry, a
simple, Flash based audio player will be rendered with the blog entry. Even if
you have no plans of being a podcaster, this could be useful for folks who want
to attach songs or other sounds to a blog entry.</p>


<p>
BlogCFC supports settings for podcasting. They are:
itunesSubtitle, itunesSummary, itunesKeywords, itunesAuthor, itunesImage, and
itunesExplicit. These settings are used in the RSS feed and are used by various
feed readers to help flag blogs with podcasts attached to them.
</p>

<hr/>

<a name="security"></a>
<h2>Security</h2>

<p>
BlogCFC handles security via a simple username/password mechanism. Out of the box, the admin
user has the ability to do anything. However, you can create new users and givem them specific roles.
Currently BlogCFC ships with a set of roles that allow for control over who can write and publish
content as well as manage categories. Who you give access to these features is entirely up to you.
</p>

<hr/>

<a name="mobile"></a>
<h2>Mobile</h2>

<p>
BlogCFC supports a mobile version of the blog. This is a highly optimized JavaScript enabled view of your blog. Mobile browsers will be sent to this view by default when they access your blog. 
(But note that a link is provided to return to the &quot;real&quot; blog home if they want.) The mobile version has it's own configuration which may be found in the mobile/config folder. Editing
the mobile.ini.cfm is similar to the main blog.ini.cfm file. This process will be documented further in the future.
</p>

<hr/>

<a name="misc"></a>
<h2>Miscellaneous</h2>

<h4>Layout Options</h4>

<p>
The look and feel of your blog is controlled by files in the
client directory. The main file you will want to examine is /tags/layout.cfm.
This, along with /includes/styles.css and /includes/layout.css, control most of
the look and feel of the blog. Other files you may want to look at: index.cfm
controls the display of entries. If you wanted to modify how an entry is shown,
you would modify this file. The file /tags/podlayout.cfm controls the display
of pods (right hand content). Do not forget that caching is used to speed up
the display of the blog. If you modify the layout, hit your blog with ?reinit=1
in the URL to force a refresh of the cache.
</p>

<p>
The installation folder contins a &quot;skins&quot; folder
that has a few other files you can use to change the layout of your blog. There
are four options: Fixed versus Liquid (liquid means the content stretches with
the window) and an option to place the pods on the left.
</p>

<h4>Pods</h4>

<p>&quot;Pods&quot; is simply my term for the blocks of content
in the right hand column. These tags are loaded by the /tags/layout.cfm file.
To ensure a common look and feel, each pod file should use the /tags/podlayout.cfm
file. This controls the size and tabular look of the pods. There are multiple
pods included in the zip. You can modify/add/delete these to suit your tastes.
</p>

<p>Please note that some pods included with BlogCFC are not
actually used out of the box. I encourage you to take a look at the pods and
see which ones you would like to use.</p>

<h4>Caching</h4>

<p>The blog makes use of scopeCache, a custom tag I developed
to enable easy RAM caching. You should be aware, however, that this caching
means changes to layout may not be reflected immediately. You can either
disable the tag in the index.cfm file, or you can simply refresh the cache
using the Administrator. Caching will be automatically refreshed whenever you
add, edit, or delete an entry. Basically, you need not worry about it unless
you are working on the layout.</p>


<4>Internationalization</h4>

<p>BlogCFC makes use of a resource bundle CFC developed by Paul
Hastings (and with slight modifications by myself). All strings (things like
button labels, etc) are controlled by a properties file in the includes
directory. By default, the blog uses main_en_US.properties. If you specify
another locale in the blog.ini.cfm file, then the Blog will attempt to load
that particular resource bundle. To create a new resource bundle in your
language, copy the en_US file and make sure you translate each and every
setting.</p>

<h4>Comment Notification</h4>

<p>By default, when a user posts a comment to a thread, the
administrator for the blog will get an email. Users also have the option to
subscribe to a thread. When they do, they will automatically get notice when
another user posts to the thread. Users have two options to unsubscribe. If
they post again, and do not check the &quot;Subscribe&quot; checkbox, they will
be removed from the thread, even though they subscribed earlier. The email sent
out also contains a link to unsubscribe. If you want to modify how comment
notifications look, edit addcomment.cfm. You will see where the email is
generated. Everything there is pretty straightforward except for the
%unsubscribe% token. This is a special value that gets replaced with the
unsubscribe URL and values specific to the person getting the email. Note that
as the owner of the blog, you get emails for all postings. The unsubscribe link
will be marked as unavailable.</p>

<p>By default, all emails sent out will be marked with a footer
that identifies the BlogCFC application and gives credit to Raymond Camden. You
have the right to remove this footer, or modify it as you see fit.</p>

<h4>Ping</h4>

<p>Some blog aggregators support ping, which simply means a
way to tell the aggregator that you have updated your blog. This is typically
done by simply loading a URL. For aggregators that support this feature, you
can ping them from your blog when you add a new entry. Simply add the ping URL
to the pingurls setting in the blog.ini.cfm file. You can supply multiple ping
URLs by simply separating them with a comma.</p>

<p>
Note - BlogCFC supports "special" pings for Technorati, Weblogs, and Icerocket. You
can ping these services by using the following special ping URLs: @technorati, @weblogs, and @icerocket.
</p>

<h4>RSS</h4>

<p>
BlogCFC makes use of RSS 2.0. You can offer RSS 1.0 support
by simply adding version=1 to the RSS URL. By default your RSS url will be: http://yourblog.com/rss.cfm.
</p>

<p>You can create RSS blends of multiple categories. This is
done by first getting the ID values of each category. You can find these in the
BlogCFC admin. Once you have the IDs, you append them to the end of the core
RSS url. If your blog was located at blogcfc.localhost.com, your RSS url would
look like so:</p>


<p>http://blogcfc5.localhost.com/client/rss.cfm?mode=full&amp;mode2=cat&amp;catid=96F8AE90-A8BC-1230-CC4F71ED36CF7E51,96F8DD56-9C3A-BEF5-88133F51DC54E2FB</p>

<p>You can put any number of category IDs in this list. (Up to
the maximum length of a URL.) This RSS blend will show the last ten articles
from any of the categories listed. </p>

<h4>Subscribers</h4>

<p>BlogCFC allows folks to subscribe to your blog. When a
person subscribes, they will receive each and every posting you write. They
will not receive an email if you simply edit an existing post.
</p>

<h4>Google Site Maps</h4>

<p>BlogCFC now supports Google Site Maps. Google Site Maps are
a way to let Google know the 'map' of your site. For BlogCFC, this is simply a
listing of all the blog entries. More information may be found here: <a href="https://www.google.com/webmasters/sitemaps/docs/en/about.html">https://www.google.com/webmasters/sitemaps/docs/en/about.html</a>
</p>

<p>BlogCFC uses the file, googlesitemap.cfm, in the root of the
client folder to enable site map support. Note - I have problems using a CFM
file with Google. I found that Google would only accept my file when I added a
URL parameter at the end to 'fake' an XML file. In other words, I provided a
URL like so: http://www.foo.com/googlesitemap.cfm?ext=xml</p>

<p>This URL variable was ignored by the code, and seemed to
please Google. As you know, we must all please Google!</p>

<h4>Dynamic BlogCFC Instances</h4>

<p>BlogCFC supports dynamic blog instances. This allows for
Blogger.com type sites. While I do not have 'proper' documentation right now,
you can view a blog entry on the topic here: <a href="http://www.coldfusionjedi.com/index.cfm/2006/10/7/Dynamic-BlogCFC-Instances">http://www.coldfusionjedi.com/index.cfm/2006/10/7/Dynamic-BlogCFC-Instances</a></p>


<h4>Blended Category Pages</h4>

<p>In the RSS section I talked about how you can manually
create RSS links for multiple categories. The same can be done for the front
end. As with the RSS support, this is done by finding the category IDs and
adding them to the URL, like so:</p>

<p>http://blogcfc5.localhost.com/client/index.cfm?mode=cat&amp;catid=96F8AE90-A8BC-1230-CC4F71ED36CF7E51,96F8DD56-9C3A-BEF5-88133F51DC54E2FB</p>

</body>
</html>

